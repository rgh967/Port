<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="scott"/>
		<property name="password" value="tiger"/>
	</bean>
	
	<!-- RECIPE TAB에서 SqlMapConfig 사용 
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property ref="dataSource" name="dataSource"/>
		<property name="configLocation" value="classpath:util/SqlMapConfig.xml"/>
	</bean>
	-->
	
	
	<!-- ========================================================== -->
	<!-- CLASS TAB 변경 & 추가되는 부분  -->
	<!-- ========================================================== -->

	<!-- SqlMapConfig.xml 파일을 bean으로 등록 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/classSQL/*.xml" />		
		<property name="configLocation" value="classpath:util/SqlMapConfig.xml"/>
		<property name="typeAliasesPackage" value="com.yorijori.cook.DTO" />
	</bean>
	
	<!-- dao를 인터페이스로 구현. 단 xml파일과 인터페이스의 메서드 이름이 반드시 같아야 함  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yorijori.cook.classDAO" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- DB 초기화 하기 -->
	<jdbc:initialize-database data-source="dataSource" enabled="true">
		<jdbc:script location="classpath:/initDB/*.sql" />
	</jdbc:initialize-database>	

	<!-- ========================================================== -->
	
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplete">
		<constructor-arg ref="sqlSessionFactory" index="0"/>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760"/>
	</bean>
	
	<!-- 트랜젝션 관리자 추가 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 트랜젝션을 transactionManager를 이용하여 어노테이션으로 하겠다.-->
	<tx:annotation-driven
		transaction-manager="transactionManager" />
	
	<!-- Gmail -->
	  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <property name="host" value="smtp.gmail.com" />
	    <property name="port" value="587" />
	    <property name="username" value="Tjsejalfk@gmail.com" />
	    <property name="password" value="Dlxogns1!@" />
	    <property name="javaMailProperties">
	    <props>
	      <prop key="mail.smtp.auth">true</prop>
	      <prop key="mail.smtp.starttls.enable">true</prop>
	    </props>
	    </property>
	  </bean>
	
</beans>